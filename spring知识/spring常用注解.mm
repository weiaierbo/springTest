{"objectClass":"NSDictionary","root":{"objectClass":"MindNode","ID":"6KIRX","rootPoint":{"objectClass":"CGPoint","x":360,"y":492},"lineColorHex":"#BBBBBB","children":{"0":{"objectClass":"MindNode","ID":"01PUR","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"NY8EX","lineColorHex":"#DC306C","text":"默认按照名称进行装配，名称可以通过name属性进行指定，如果没有指定name属性，当注解写在字段上时，默认取字段名进行安装名称查找，如果注解写在setter方法上默认取属性名进行装配。当找不到与名称匹配的bean时才按照类型进行装配。但是需要注意的是，如果name属性一旦指定，就只会按照名称进行装配"},"objectClass":"NSArray"},"text":"@Resource"},"1":{"objectClass":"MindNode","ID":"T12A2","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"EMJ6A","lineColorHex":"#BF58F5","text":"默认按类型装配（这个注解是属业spring的），默认情况下必须要求依赖对象必须存在，如果要允许null值，可以设置它的required属性为false，如：@Autowired(required=false) ，如果我们想使用名称装配可以结合@Qualifier注解进行使用"},"objectClass":"NSArray"},"text":"@Autowired"},"2":{"objectClass":"MindNode","ID":"7P955","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"5565R","lineColorHex":"#26BBFF","text":"按类型装配，功能比@Autowired少"},"objectClass":"NSArray"},"text":"@Inject"},"3":{"objectClass":"MindNode","ID":"7457D","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"OE8P1","lineColorHex":"#37C45A","text":"相当于init-method,使用在方法上，当Bean初始化时执行"},"objectClass":"NSArray"},"text":"@PostConstruct"},"4":{"objectClass":"MindNode","ID":"5ZJ7O","lineColorHex":"#1BD6E7","children":{"0":{"objectClass":"MindNode","ID":"41T72","lineColorHex":"#1BD6E7","text":"相当于destory-method，使用在方法上，当Bean销毁时执行"},"objectClass":"NSArray"},"text":"@PreDestroy ","remarkDisplay":true},"objectClass":"NSArray"},"text":"spring常用注解"},"ID":"0WKI4"}